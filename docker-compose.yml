version: '3.8'

services:
  # PostgreSQL with pgvector extension
  postgres:
    image: ankane/pgvector:latest
    container_name: netvexa-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-netvexa_password}
      POSTGRES_DB: ${POSTGRES_DB:-netvexa_db}
    ports:
      - "5433:5432"  # PostgreSQL exposed on localhost:5433 to avoid conflict
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/scripts/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - netvexa-network

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: netvexa-redis
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - netvexa-network

  # NETVEXA Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: netvexa-backend
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env
    environment:
      # Database
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER:-netvexa}:${POSTGRES_PASSWORD:-netvexa_password}@postgres:5432/${POSTGRES_DB:-netvexa_db}
      REDIS_URL: redis://redis:6379
      
      # LLM Provider Configuration
      LLM_PROVIDER: ${LLM_PROVIDER:-anthropic}  # Options: anthropic, google, openai
      
      # API Keys (set these in .env file)
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      GOOGLE_API_KEY: ${GOOGLE_API_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      
      # Other settings
      SECRET_KEY: ${SECRET_KEY:-development-secret-key}
      ENVIRONMENT: ${ENVIRONMENT:-development}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/__pycache__
    command: ./start.sh
    networks:
      - netvexa-network

volumes:
  postgres_data:
  redis_data:

networks:
  netvexa-network:
    driver: bridge